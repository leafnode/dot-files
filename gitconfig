[user]
	name = Leszek KrupinÃÅski
	email = leafnode@gmail.com
[color]
	ui = true
	diff = true
	branch = true
	interactive = true
	status = true
[core]
	autocrlf = input
	excludesfile = /Users/leafnode/.gitignore_global
[github]
	user = leafnode

[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	simplelog = log --pretty=format:'%C(yellow)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
        today = log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative
        ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
        ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
        lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
        lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
        ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
        le = log --oneline --decorate
        filelog = log -u
        fl = log -u
        dl = "!git ll -1"
        flc = log -u -1
        dlc = diff --cached HEAD^
        dr  = "!f() { git diff "$1"^.."$1"; }; f"
        lr  = "!f() { git log "$1"^.."$1"; }; f"
        lc  = "!f() { git ll "$1"^.."$1"; }; f"
        diffr  = "!f() { git diff "$1"^.."$1"; }; f"
        f = "!git ls-files | grep -i"
        grep = grep -Ii
        gr = grep -Ii
        gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
        la = "!git config -l | grep alias | cut -c 7-"
        done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
        assume = update-index --assume-unchanged
        unassume = update-index --no-assume-unchanged
        assumed = "!git ls-files -v | grep ^h | cut -c 3-"
        unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
        assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
        lasttag = describe --tags --abbrev=0
        lt = describe --tags --abbrev=0
        ours = "!f() { git co --ours $@ && git add $@; }; f"
        theirs = "!f() { git co --theirs $@ && git add $@; }; f"
        backup = "!git archive --format zip -o $(git rev-parse --show-toplevel | sed -e 's#/.*/##')-$(git rev-parse --abbrev-ref HEAD)-$(date +"%Y-%m-%d.%H-%M-%S").zip $(git rev-parse --abbrev-ref HEAD)"
        sync = "!f() { git fetch $1; git merge --ff-only $1/$2; }; f"

        # shortcuts
        cp = cherry-pick
        st = status -s
        cl = clone
        ci = commit
        co = checkout
        br = branch 
        diff = diff --word-diff
        dc = diff --cached

        # reset
        r = reset
        r1 = reset HEAD^
        r2 = reset HEAD^^
        rh = reset --hard
        rh1 = reset HEAD^ --hard
        rh2 = reset HEAD^^ --hard

        # git-svn
        svnr = svn rebase
        svnd = svn dcommit
        svnl = svn log --oneline --show-commit

        # stash
        sl = stash list
        sa = stash apply
        ss = stash save

        pull-all = !"for b in $(git for-each-ref refs/heads --format='%(refname)') ; do git checkout ${b#refs/heads/} ; git pull --ff-only ; done"

        ignored = !git ls-files -v | grep "^[[:lower:]]"


[difftool "sourcetree"]
	cmd = /usr/local/bin/ksdiff -w \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /usr/local/bin/ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[push]
	default = simple
[credential]
	helper = cache
